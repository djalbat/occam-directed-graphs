"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _necessary = require("necessary");

var _vertex = require("./utilities/vertex");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var first = _necessary.arrayUtilities.first;

var Cycle = /*#__PURE__*/function () {
  function Cycle(vertexNames) {
    _classCallCheck(this, Cycle);

    this.vertexNames = vertexNames;
  }

  _createClass(Cycle, [{
    key: "getVertexNames",
    value: function getVertexNames() {
      return this.vertexNames;
    }
  }], [{
    key: "fromVertexNamePartialCycleAndSuccessorVertices",
    value: function fromVertexNamePartialCycleAndSuccessorVertices(vertexName, partialCycle, successorVertices) {
      successorVertices = successorVertices.slice(); ///

      var successorVerticesLength = successorVertices.length;

      if (successorVerticesLength > 0) {
        var firstSuccessorVertex = first(successorVertices),
            firstSuccessorVertexName = firstSuccessorVertex.getName(),
            _cyclicEdgeTargetVertexName = partialCycle.getTargetVertexName();

        if (firstSuccessorVertexName === _cyclicEdgeTargetVertexName) {
          successorVertices.shift();
        }
      }

      var cyclicEdgeSourceVertexName = partialCycle.getCyclicEdgeSourceVertexName(),
          cyclicEdgeTargetVertexName = partialCycle.getCyclicEdgeTargetVertexName(),
          predecessorVertexNames = partialCycle.getPredecessorVertexNames(),
          successorVertexNames = (0, _vertex.vertexNamesFromVertices)(successorVertices),
          vertexNames = vertexName === cyclicEdgeTargetVertexName ? [].concat(cyclicEdgeTargetVertexName).concat(predecessorVertexNames).concat(cyclicEdgeSourceVertexName) : [].concat(predecessorVertexNames).concat(cyclicEdgeSourceVertexName).concat(cyclicEdgeTargetVertexName).concat(successorVertexNames),
          cycle = new Cycle(vertexNames);
      return cycle;
    }
  }]);

  return Cycle;
}();

exports["default"] = Cycle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN5Y2xlLmpzIl0sIm5hbWVzIjpbImZpcnN0IiwiYXJyYXlVdGlsaXRpZXMiLCJDeWNsZSIsInZlcnRleE5hbWVzIiwidmVydGV4TmFtZSIsInBhcnRpYWxDeWNsZSIsInN1Y2Nlc3NvclZlcnRpY2VzIiwic2xpY2UiLCJzdWNjZXNzb3JWZXJ0aWNlc0xlbmd0aCIsImxlbmd0aCIsImZpcnN0U3VjY2Vzc29yVmVydGV4IiwiZmlyc3RTdWNjZXNzb3JWZXJ0ZXhOYW1lIiwiZ2V0TmFtZSIsImN5Y2xpY0VkZ2VUYXJnZXRWZXJ0ZXhOYW1lIiwiZ2V0VGFyZ2V0VmVydGV4TmFtZSIsInNoaWZ0IiwiY3ljbGljRWRnZVNvdXJjZVZlcnRleE5hbWUiLCJnZXRDeWNsaWNFZGdlU291cmNlVmVydGV4TmFtZSIsImdldEN5Y2xpY0VkZ2VUYXJnZXRWZXJ0ZXhOYW1lIiwicHJlZGVjZXNzb3JWZXJ0ZXhOYW1lcyIsImdldFByZWRlY2Vzc29yVmVydGV4TmFtZXMiLCJzdWNjZXNzb3JWZXJ0ZXhOYW1lcyIsImNvbmNhdCIsImN5Y2xlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQUVBOztBQUVBOzs7Ozs7OztJQUVRQSxLLEdBQVVDLHlCLENBQVZELEs7O0lBRWFFLEs7QUFDbkIsaUJBQVlDLFdBQVosRUFBeUI7QUFBQTs7QUFDdkIsU0FBS0EsV0FBTCxHQUFtQkEsV0FBbkI7QUFDRDs7OztxQ0FFZ0I7QUFDZixhQUFPLEtBQUtBLFdBQVo7QUFDRDs7O21FQUVxREMsVSxFQUFZQyxZLEVBQWNDLGlCLEVBQW1CO0FBQ2pHQSxNQUFBQSxpQkFBaUIsR0FBR0EsaUJBQWlCLENBQUNDLEtBQWxCLEVBQXBCLENBRGlHLENBQ2pEOztBQUVoRCxVQUFNQyx1QkFBdUIsR0FBR0YsaUJBQWlCLENBQUNHLE1BQWxEOztBQUVBLFVBQUlELHVCQUF1QixHQUFHLENBQTlCLEVBQWlDO0FBQy9CLFlBQU1FLG9CQUFvQixHQUFHVixLQUFLLENBQUNNLGlCQUFELENBQWxDO0FBQUEsWUFDTUssd0JBQXdCLEdBQUdELG9CQUFvQixDQUFDRSxPQUFyQixFQURqQztBQUFBLFlBRU1DLDJCQUEwQixHQUFHUixZQUFZLENBQUNTLG1CQUFiLEVBRm5DOztBQUlBLFlBQUlILHdCQUF3QixLQUFLRSwyQkFBakMsRUFBNkQ7QUFDM0RQLFVBQUFBLGlCQUFpQixDQUFDUyxLQUFsQjtBQUNEO0FBQ0Y7O0FBRUQsVUFBTUMsMEJBQTBCLEdBQUdYLFlBQVksQ0FBQ1ksNkJBQWIsRUFBbkM7QUFBQSxVQUNNSiwwQkFBMEIsR0FBR1IsWUFBWSxDQUFDYSw2QkFBYixFQURuQztBQUFBLFVBRU1DLHNCQUFzQixHQUFHZCxZQUFZLENBQUNlLHlCQUFiLEVBRi9CO0FBQUEsVUFHTUMsb0JBQW9CLEdBQUcscUNBQXdCZixpQkFBeEIsQ0FIN0I7QUFBQSxVQUlNSCxXQUFXLEdBQUlDLFVBQVUsS0FBS1MsMEJBQWhCLEdBQ0UsR0FBR1MsTUFBSCxDQUFVVCwwQkFBVixFQUFzQ1MsTUFBdEMsQ0FBNkNILHNCQUE3QyxFQUFxRUcsTUFBckUsQ0FBNEVOLDBCQUE1RSxDQURGLEdBRUksR0FBR00sTUFBSCxDQUFVSCxzQkFBVixFQUFrQ0csTUFBbEMsQ0FBeUNOLDBCQUF6QyxFQUFxRU0sTUFBckUsQ0FBNEVULDBCQUE1RSxFQUF3R1MsTUFBeEcsQ0FBK0dELG9CQUEvRyxDQU54QjtBQUFBLFVBT01FLEtBQUssR0FBRyxJQUFJckIsS0FBSixDQUFVQyxXQUFWLENBUGQ7QUFTQSxhQUFPb0IsS0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGFycmF5VXRpbGl0aWVzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuXG5pbXBvcnQgeyB2ZXJ0ZXhOYW1lc0Zyb21WZXJ0aWNlcyB9IGZyb20gXCIuL3V0aWxpdGllcy92ZXJ0ZXhcIjtcblxuY29uc3QgeyBmaXJzdCB9ID0gYXJyYXlVdGlsaXRpZXM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN5Y2xlIHtcbiAgY29uc3RydWN0b3IodmVydGV4TmFtZXMpIHtcbiAgICB0aGlzLnZlcnRleE5hbWVzID0gdmVydGV4TmFtZXM7XG4gIH1cblxuICBnZXRWZXJ0ZXhOYW1lcygpIHtcbiAgICByZXR1cm4gdGhpcy52ZXJ0ZXhOYW1lcztcbiAgfVxuXG4gIHN0YXRpYyBmcm9tVmVydGV4TmFtZVBhcnRpYWxDeWNsZUFuZFN1Y2Nlc3NvclZlcnRpY2VzKHZlcnRleE5hbWUsIHBhcnRpYWxDeWNsZSwgc3VjY2Vzc29yVmVydGljZXMpIHtcbiAgICBzdWNjZXNzb3JWZXJ0aWNlcyA9IHN1Y2Nlc3NvclZlcnRpY2VzLnNsaWNlKCk7ICAvLy9cbiAgICBcbiAgICBjb25zdCBzdWNjZXNzb3JWZXJ0aWNlc0xlbmd0aCA9IHN1Y2Nlc3NvclZlcnRpY2VzLmxlbmd0aDtcbiAgICBcbiAgICBpZiAoc3VjY2Vzc29yVmVydGljZXNMZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCBmaXJzdFN1Y2Nlc3NvclZlcnRleCA9IGZpcnN0KHN1Y2Nlc3NvclZlcnRpY2VzKSxcbiAgICAgICAgICAgIGZpcnN0U3VjY2Vzc29yVmVydGV4TmFtZSA9IGZpcnN0U3VjY2Vzc29yVmVydGV4LmdldE5hbWUoKSxcbiAgICAgICAgICAgIGN5Y2xpY0VkZ2VUYXJnZXRWZXJ0ZXhOYW1lID0gcGFydGlhbEN5Y2xlLmdldFRhcmdldFZlcnRleE5hbWUoKTtcbiAgICAgIFxuICAgICAgaWYgKGZpcnN0U3VjY2Vzc29yVmVydGV4TmFtZSA9PT0gY3ljbGljRWRnZVRhcmdldFZlcnRleE5hbWUpIHtcbiAgICAgICAgc3VjY2Vzc29yVmVydGljZXMuc2hpZnQoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBjeWNsaWNFZGdlU291cmNlVmVydGV4TmFtZSA9IHBhcnRpYWxDeWNsZS5nZXRDeWNsaWNFZGdlU291cmNlVmVydGV4TmFtZSgpLFxuICAgICAgICAgIGN5Y2xpY0VkZ2VUYXJnZXRWZXJ0ZXhOYW1lID0gcGFydGlhbEN5Y2xlLmdldEN5Y2xpY0VkZ2VUYXJnZXRWZXJ0ZXhOYW1lKCksXG4gICAgICAgICAgcHJlZGVjZXNzb3JWZXJ0ZXhOYW1lcyA9IHBhcnRpYWxDeWNsZS5nZXRQcmVkZWNlc3NvclZlcnRleE5hbWVzKCksXG4gICAgICAgICAgc3VjY2Vzc29yVmVydGV4TmFtZXMgPSB2ZXJ0ZXhOYW1lc0Zyb21WZXJ0aWNlcyhzdWNjZXNzb3JWZXJ0aWNlcyksXG4gICAgICAgICAgdmVydGV4TmFtZXMgPSAodmVydGV4TmFtZSA9PT0gY3ljbGljRWRnZVRhcmdldFZlcnRleE5hbWUpID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgW10uY29uY2F0KGN5Y2xpY0VkZ2VUYXJnZXRWZXJ0ZXhOYW1lKS5jb25jYXQocHJlZGVjZXNzb3JWZXJ0ZXhOYW1lcykuY29uY2F0KGN5Y2xpY0VkZ2VTb3VyY2VWZXJ0ZXhOYW1lKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW10uY29uY2F0KHByZWRlY2Vzc29yVmVydGV4TmFtZXMpLmNvbmNhdChjeWNsaWNFZGdlU291cmNlVmVydGV4TmFtZSkuY29uY2F0KGN5Y2xpY0VkZ2VUYXJnZXRWZXJ0ZXhOYW1lKS5jb25jYXQoc3VjY2Vzc29yVmVydGV4TmFtZXMpLFxuICAgICAgICAgIGN5Y2xlID0gbmV3IEN5Y2xlKHZlcnRleE5hbWVzKTtcbiAgICBcbiAgICByZXR1cm4gY3ljbGU7XG4gIH1cbn1cbiJdfQ==